// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Res.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Res_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Res_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021011 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "MsgType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Res_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Res_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Res_2eproto;
class PBRes;
struct PBResDefaultTypeInternal;
extern PBResDefaultTypeInternal _PBRes_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PBRes* Arena::CreateMaybeMessage<::PBRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class PBRes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PBRes) */ {
 public:
  inline PBRes() : PBRes(nullptr) {}
  ~PBRes() override;
  explicit PROTOBUF_CONSTEXPR PBRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PBRes(const PBRes& from);
  PBRes(PBRes&& from) noexcept
    : PBRes() {
    *this = ::std::move(from);
  }

  inline PBRes& operator=(const PBRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline PBRes& operator=(PBRes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PBRes& default_instance() {
    return *internal_default_instance();
  }
  static inline const PBRes* internal_default_instance() {
    return reinterpret_cast<const PBRes*>(
               &_PBRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PBRes& a, PBRes& b) {
    a.Swap(&b);
  }
  inline void Swap(PBRes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PBRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PBRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PBRes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PBRes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PBRes& from) {
    PBRes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PBRes";
  }
  protected:
  explicit PBRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReqIdFieldNumber = 2,
    kRetMsgFieldNumber = 5,
    kPayloadFieldNumber = 6,
    kResMsgTypeFieldNumber = 1,
    kRetCodeFieldNumber = 4,
    kResTimeFieldNumber = 3,
  };
  // string reqId = 2;
  void clear_reqid();
  const std::string& reqid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_reqid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_reqid();
  PROTOBUF_NODISCARD std::string* release_reqid();
  void set_allocated_reqid(std::string* reqid);
  private:
  const std::string& _internal_reqid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_reqid(const std::string& value);
  std::string* _internal_mutable_reqid();
  public:

  // string retMsg = 5;
  void clear_retmsg();
  const std::string& retmsg() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_retmsg(ArgT0&& arg0, ArgT... args);
  std::string* mutable_retmsg();
  PROTOBUF_NODISCARD std::string* release_retmsg();
  void set_allocated_retmsg(std::string* retmsg);
  private:
  const std::string& _internal_retmsg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_retmsg(const std::string& value);
  std::string* _internal_mutable_retmsg();
  public:

  // .google.protobuf.Any payload = 6;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const ::PROTOBUF_NAMESPACE_ID::Any& payload() const;
  PROTOBUF_NODISCARD ::PROTOBUF_NAMESPACE_ID::Any* release_payload();
  ::PROTOBUF_NAMESPACE_ID::Any* mutable_payload();
  void set_allocated_payload(::PROTOBUF_NAMESPACE_ID::Any* payload);
  private:
  const ::PROTOBUF_NAMESPACE_ID::Any& _internal_payload() const;
  ::PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_payload();
  public:
  void unsafe_arena_set_allocated_payload(
      ::PROTOBUF_NAMESPACE_ID::Any* payload);
  ::PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_payload();

  // .PBMsgType resMsgType = 1;
  void clear_resmsgtype();
  ::PBMsgType resmsgtype() const;
  void set_resmsgtype(::PBMsgType value);
  private:
  ::PBMsgType _internal_resmsgtype() const;
  void _internal_set_resmsgtype(::PBMsgType value);
  public:

  // int32 retCode = 4;
  void clear_retcode();
  int32_t retcode() const;
  void set_retcode(int32_t value);
  private:
  int32_t _internal_retcode() const;
  void _internal_set_retcode(int32_t value);
  public:

  // uint64 resTime = 3;
  void clear_restime();
  uint64_t restime() const;
  void set_restime(uint64_t value);
  private:
  uint64_t _internal_restime() const;
  void _internal_set_restime(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:PBRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reqid_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr retmsg_;
    ::PROTOBUF_NAMESPACE_ID::Any* payload_;
    int resmsgtype_;
    int32_t retcode_;
    uint64_t restime_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Res_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBRes

// .PBMsgType resMsgType = 1;
inline void PBRes::clear_resmsgtype() {
  _impl_.resmsgtype_ = 0;
}
inline ::PBMsgType PBRes::_internal_resmsgtype() const {
  return static_cast< ::PBMsgType >(_impl_.resmsgtype_);
}
inline ::PBMsgType PBRes::resmsgtype() const {
  // @@protoc_insertion_point(field_get:PBRes.resMsgType)
  return _internal_resmsgtype();
}
inline void PBRes::_internal_set_resmsgtype(::PBMsgType value) {
  
  _impl_.resmsgtype_ = value;
}
inline void PBRes::set_resmsgtype(::PBMsgType value) {
  _internal_set_resmsgtype(value);
  // @@protoc_insertion_point(field_set:PBRes.resMsgType)
}

// string reqId = 2;
inline void PBRes::clear_reqid() {
  _impl_.reqid_.ClearToEmpty();
}
inline const std::string& PBRes::reqid() const {
  // @@protoc_insertion_point(field_get:PBRes.reqId)
  return _internal_reqid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBRes::set_reqid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.reqid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBRes.reqId)
}
inline std::string* PBRes::mutable_reqid() {
  std::string* _s = _internal_mutable_reqid();
  // @@protoc_insertion_point(field_mutable:PBRes.reqId)
  return _s;
}
inline const std::string& PBRes::_internal_reqid() const {
  return _impl_.reqid_.Get();
}
inline void PBRes::_internal_set_reqid(const std::string& value) {
  
  _impl_.reqid_.Set(value, GetArenaForAllocation());
}
inline std::string* PBRes::_internal_mutable_reqid() {
  
  return _impl_.reqid_.Mutable(GetArenaForAllocation());
}
inline std::string* PBRes::release_reqid() {
  // @@protoc_insertion_point(field_release:PBRes.reqId)
  return _impl_.reqid_.Release();
}
inline void PBRes::set_allocated_reqid(std::string* reqid) {
  if (reqid != nullptr) {
    
  } else {
    
  }
  _impl_.reqid_.SetAllocated(reqid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.reqid_.IsDefault()) {
    _impl_.reqid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBRes.reqId)
}

// uint64 resTime = 3;
inline void PBRes::clear_restime() {
  _impl_.restime_ = uint64_t{0u};
}
inline uint64_t PBRes::_internal_restime() const {
  return _impl_.restime_;
}
inline uint64_t PBRes::restime() const {
  // @@protoc_insertion_point(field_get:PBRes.resTime)
  return _internal_restime();
}
inline void PBRes::_internal_set_restime(uint64_t value) {
  
  _impl_.restime_ = value;
}
inline void PBRes::set_restime(uint64_t value) {
  _internal_set_restime(value);
  // @@protoc_insertion_point(field_set:PBRes.resTime)
}

// int32 retCode = 4;
inline void PBRes::clear_retcode() {
  _impl_.retcode_ = 0;
}
inline int32_t PBRes::_internal_retcode() const {
  return _impl_.retcode_;
}
inline int32_t PBRes::retcode() const {
  // @@protoc_insertion_point(field_get:PBRes.retCode)
  return _internal_retcode();
}
inline void PBRes::_internal_set_retcode(int32_t value) {
  
  _impl_.retcode_ = value;
}
inline void PBRes::set_retcode(int32_t value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:PBRes.retCode)
}

// string retMsg = 5;
inline void PBRes::clear_retmsg() {
  _impl_.retmsg_.ClearToEmpty();
}
inline const std::string& PBRes::retmsg() const {
  // @@protoc_insertion_point(field_get:PBRes.retMsg)
  return _internal_retmsg();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PBRes::set_retmsg(ArgT0&& arg0, ArgT... args) {
 
 _impl_.retmsg_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PBRes.retMsg)
}
inline std::string* PBRes::mutable_retmsg() {
  std::string* _s = _internal_mutable_retmsg();
  // @@protoc_insertion_point(field_mutable:PBRes.retMsg)
  return _s;
}
inline const std::string& PBRes::_internal_retmsg() const {
  return _impl_.retmsg_.Get();
}
inline void PBRes::_internal_set_retmsg(const std::string& value) {
  
  _impl_.retmsg_.Set(value, GetArenaForAllocation());
}
inline std::string* PBRes::_internal_mutable_retmsg() {
  
  return _impl_.retmsg_.Mutable(GetArenaForAllocation());
}
inline std::string* PBRes::release_retmsg() {
  // @@protoc_insertion_point(field_release:PBRes.retMsg)
  return _impl_.retmsg_.Release();
}
inline void PBRes::set_allocated_retmsg(std::string* retmsg) {
  if (retmsg != nullptr) {
    
  } else {
    
  }
  _impl_.retmsg_.SetAllocated(retmsg, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.retmsg_.IsDefault()) {
    _impl_.retmsg_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:PBRes.retMsg)
}

// .google.protobuf.Any payload = 6;
inline bool PBRes::_internal_has_payload() const {
  return this != internal_default_instance() && _impl_.payload_ != nullptr;
}
inline bool PBRes::has_payload() const {
  return _internal_has_payload();
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& PBRes::_internal_payload() const {
  const ::PROTOBUF_NAMESPACE_ID::Any* p = _impl_.payload_;
  return p != nullptr ? *p : reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Any&>(
      ::PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const ::PROTOBUF_NAMESPACE_ID::Any& PBRes::payload() const {
  // @@protoc_insertion_point(field_get:PBRes.payload)
  return _internal_payload();
}
inline void PBRes::unsafe_arena_set_allocated_payload(
    ::PROTOBUF_NAMESPACE_ID::Any* payload) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.payload_);
  }
  _impl_.payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:PBRes.payload)
}
inline ::PROTOBUF_NAMESPACE_ID::Any* PBRes::release_payload() {
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* PBRes::unsafe_arena_release_payload() {
  // @@protoc_insertion_point(field_release:PBRes.payload)
  
  ::PROTOBUF_NAMESPACE_ID::Any* temp = _impl_.payload_;
  _impl_.payload_ = nullptr;
  return temp;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* PBRes::_internal_mutable_payload() {
  
  if (_impl_.payload_ == nullptr) {
    auto* p = CreateMaybeMessage<::PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    _impl_.payload_ = p;
  }
  return _impl_.payload_;
}
inline ::PROTOBUF_NAMESPACE_ID::Any* PBRes::mutable_payload() {
  ::PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:PBRes.payload)
  return _msg;
}
inline void PBRes::set_allocated_payload(::PROTOBUF_NAMESPACE_ID::Any* payload) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.payload_);
  }
  if (payload) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(payload));
    if (message_arena != submessage_arena) {
      payload = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:PBRes.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Res_2eproto
