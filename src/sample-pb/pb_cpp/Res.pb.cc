// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Res.proto

#include "Res.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR PBRes::PBRes(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.reqid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.retmsg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.payload_)*/nullptr
  , /*decltype(_impl_.resmsgtype_)*/0
  , /*decltype(_impl_.retcode_)*/0
  , /*decltype(_impl_.restime_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PBResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PBResDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PBResDefaultTypeInternal() {}
  union {
    PBRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PBResDefaultTypeInternal _PBRes_default_instance_;
static ::_pb::Metadata file_level_metadata_Res_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Res_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Res_2eproto = nullptr;

const uint32_t TableStruct_Res_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PBRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PBRes, _impl_.resmsgtype_),
  PROTOBUF_FIELD_OFFSET(::PBRes, _impl_.reqid_),
  PROTOBUF_FIELD_OFFSET(::PBRes, _impl_.restime_),
  PROTOBUF_FIELD_OFFSET(::PBRes, _impl_.retcode_),
  PROTOBUF_FIELD_OFFSET(::PBRes, _impl_.retmsg_),
  PROTOBUF_FIELD_OFFSET(::PBRes, _impl_.payload_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PBRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_PBRes_default_instance_._instance,
};

const char descriptor_table_protodef_Res_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tRes.proto\032\031google/protobuf/any.proto\032\r"
  "MsgType.proto\"\217\001\n\005PBRes\022\036\n\nresMsgType\030\001 "
  "\001(\0162\n.PBMsgType\022\r\n\005reqId\030\002 \001(\t\022\017\n\007resTim"
  "e\030\003 \001(\004\022\017\n\007retCode\030\004 \001(\005\022\016\n\006retMsg\030\005 \001(\t"
  "\022%\n\007payload\030\006 \001(\0132\024.google.protobuf.Anyb"
  "\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Res_2eproto_deps[2] = {
  &::descriptor_table_MsgType_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::_pbi::once_flag descriptor_table_Res_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Res_2eproto = {
    false, false, 207, descriptor_table_protodef_Res_2eproto,
    "Res.proto",
    &descriptor_table_Res_2eproto_once, descriptor_table_Res_2eproto_deps, 2, 1,
    schemas, file_default_instances, TableStruct_Res_2eproto::offsets,
    file_level_metadata_Res_2eproto, file_level_enum_descriptors_Res_2eproto,
    file_level_service_descriptors_Res_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Res_2eproto_getter() {
  return &descriptor_table_Res_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Res_2eproto(&descriptor_table_Res_2eproto);

// ===================================================================

class PBRes::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& payload(const PBRes* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
PBRes::_Internal::payload(const PBRes* msg) {
  return *msg->_impl_.payload_;
}
void PBRes::clear_payload() {
  if (GetArenaForAllocation() == nullptr && _impl_.payload_ != nullptr) {
    delete _impl_.payload_;
  }
  _impl_.payload_ = nullptr;
}
PBRes::PBRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:PBRes)
}
PBRes::PBRes(const PBRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PBRes* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.retmsg_){}
    , decltype(_impl_.payload_){nullptr}
    , decltype(_impl_.resmsgtype_){}
    , decltype(_impl_.retcode_){}
    , decltype(_impl_.restime_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.reqid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reqid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reqid().empty()) {
    _this->_impl_.reqid_.Set(from._internal_reqid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.retmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.retmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_retmsg().empty()) {
    _this->_impl_.retmsg_.Set(from._internal_retmsg(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_payload()) {
    _this->_impl_.payload_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from._impl_.payload_);
  }
  ::memcpy(&_impl_.resmsgtype_, &from._impl_.resmsgtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.restime_) -
    reinterpret_cast<char*>(&_impl_.resmsgtype_)) + sizeof(_impl_.restime_));
  // @@protoc_insertion_point(copy_constructor:PBRes)
}

inline void PBRes::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.reqid_){}
    , decltype(_impl_.retmsg_){}
    , decltype(_impl_.payload_){nullptr}
    , decltype(_impl_.resmsgtype_){0}
    , decltype(_impl_.retcode_){0}
    , decltype(_impl_.restime_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.reqid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reqid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.retmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.retmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PBRes::~PBRes() {
  // @@protoc_insertion_point(destructor:PBRes)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PBRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.reqid_.Destroy();
  _impl_.retmsg_.Destroy();
  if (this != internal_default_instance()) delete _impl_.payload_;
}

void PBRes::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PBRes::Clear() {
// @@protoc_insertion_point(message_clear_start:PBRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reqid_.ClearToEmpty();
  _impl_.retmsg_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.payload_ != nullptr) {
    delete _impl_.payload_;
  }
  _impl_.payload_ = nullptr;
  ::memset(&_impl_.resmsgtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.restime_) -
      reinterpret_cast<char*>(&_impl_.resmsgtype_)) + sizeof(_impl_.restime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PBRes::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .PBMsgType resMsgType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resmsgtype(static_cast<::PBMsgType>(val));
        } else
          goto handle_unusual;
        continue;
      // string reqId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reqid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBRes.reqId"));
        } else
          goto handle_unusual;
        continue;
      // uint64 resTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.restime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 retCode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string retMsg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_retmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "PBRes.retMsg"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Any payload = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PBRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .PBMsgType resMsgType = 1;
  if (this->_internal_resmsgtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_resmsgtype(), target);
  }

  // string reqId = 2;
  if (!this->_internal_reqid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reqid().data(), static_cast<int>(this->_internal_reqid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBRes.reqId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reqid(), target);
  }

  // uint64 resTime = 3;
  if (this->_internal_restime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_restime(), target);
  }

  // int32 retCode = 4;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_retcode(), target);
  }

  // string retMsg = 5;
  if (!this->_internal_retmsg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_retmsg().data(), static_cast<int>(this->_internal_retmsg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PBRes.retMsg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_retmsg(), target);
  }

  // .google.protobuf.Any payload = 6;
  if (this->_internal_has_payload()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::payload(this),
        _Internal::payload(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBRes)
  return target;
}

size_t PBRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reqId = 2;
  if (!this->_internal_reqid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reqid());
  }

  // string retMsg = 5;
  if (!this->_internal_retmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_retmsg());
  }

  // .google.protobuf.Any payload = 6;
  if (this->_internal_has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.payload_);
  }

  // .PBMsgType resMsgType = 1;
  if (this->_internal_resmsgtype() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_resmsgtype());
  }

  // int32 retCode = 4;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_retcode());
  }

  // uint64 resTime = 3;
  if (this->_internal_restime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_restime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PBRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PBRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PBRes::GetClassData() const { return &_class_data_; }


void PBRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PBRes*>(&to_msg);
  auto& from = static_cast<const PBRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:PBRes)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reqid().empty()) {
    _this->_internal_set_reqid(from._internal_reqid());
  }
  if (!from._internal_retmsg().empty()) {
    _this->_internal_set_retmsg(from._internal_retmsg());
  }
  if (from._internal_has_payload()) {
    _this->_internal_mutable_payload()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(
        from._internal_payload());
  }
  if (from._internal_resmsgtype() != 0) {
    _this->_internal_set_resmsgtype(from._internal_resmsgtype());
  }
  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  if (from._internal_restime() != 0) {
    _this->_internal_set_restime(from._internal_restime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PBRes::CopyFrom(const PBRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRes::IsInitialized() const {
  return true;
}

void PBRes::InternalSwap(PBRes* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reqid_, lhs_arena,
      &other->_impl_.reqid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.retmsg_, lhs_arena,
      &other->_impl_.retmsg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PBRes, _impl_.restime_)
      + sizeof(PBRes::_impl_.restime_)
      - PROTOBUF_FIELD_OFFSET(PBRes, _impl_.payload_)>(
          reinterpret_cast<char*>(&_impl_.payload_),
          reinterpret_cast<char*>(&other->_impl_.payload_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PBRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Res_2eproto_getter, &descriptor_table_Res_2eproto_once,
      file_level_metadata_Res_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PBRes*
Arena::CreateMaybeMessage< ::PBRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PBRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
